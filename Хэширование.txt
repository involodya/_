#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

int hash1(int &i, int &j, vector<int> &h, vector<int> &pow, const int &P, const int &M) {
    return (h[j + 1] - h[i] * (ll) pow[j - i + 1] % M + M) % M;
}

int main() {
    ios::sync_with_stdio(false), cin.tie(0);

    //const ll M = 1e8;
    //const ll P = 100;
    const int M = 1e9 + 7; /* Вероятность коллизии = n/M, если не хватает, то нужно брать два хэша и вероятность будет n/(M1*M2) */
    const int P = 4093;
    string s = "123456";
    int n = s.size();
    vector<int> h(n + 1);
    vector<int> pow(n + 1);

    h[0] = 0;
    pow[0] = 1;
    for (int i = 1; i <= n; ++i) {
        pow[i] = (ll) pow[i - 1] * P % M;
        h[i] = ((ll) h[i - 1] * P + s[i - 1]) % M;
    }
    
    int i = 0, j = n - 1;
    cout << hash1(i, j, h, pow, P, M);

    return 0;
}